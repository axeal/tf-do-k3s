#!/bin/bash
set -x

mkdir -p /etc/rancher/k3s/

export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

cat <<EOF > /etc/rancher/k3s/config.yaml
token: "${token}"
tls-san:
  - ${lb_ip}
EOF

%{ if etcd }
  %{ if count == 0 }
    export K3S_CLUSTER_INIT="true"
  %{ else }
    echo "server: https://${lb_ip}:6443" >> /etc/rancher/k3s/config.yaml
  %{ endif }
%{ else }
  DATABASE_URI=`echo ${database_uri} | sed -e 's/defaultdb/${database_name}/g' | sed -e 's/postgresql/postgres/g'`
  echo "datastore-endpoint: \"$DATABASE_URI\"" >> /etc/rancher/k3s/config.yaml
%{ endif }

if [ ! -z "${k3s_version}" ]; then
  export INSTALL_K3S_VERSION="${k3s_version}"
fi

curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -

if [ "${count}" -eq "0" ]; then

  curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

  helm repo add jetstack https://charts.jetstack.io
  helm repo add rancher ${rancher_chart_repo}
  helm repo update

  helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true

  # wait for the cert-manager-webhook to be ready
  while ! kubectl -n cert-manager rollout status deploy/cert-manager-webhook; do
    sleep 5
  done

  helm install rancher rancher/rancher --namespace cattle-system --create-namespace --set hostname=${lb_ip}.nip.io --version ${rancher_version} --set bootstrapPassword=${admin_password}
fi
